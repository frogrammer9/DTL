Log is a singleton, you can access it by using a reference (dtl::Log) or a macro (DTL_LOG)

--settings--
Parameters:

entryCol - color of a message of type entry (arguments can be DTL_DEFAULT (white) or DTL_ followed by a color name).
infoCol - color of a message of type information (arguments can be DTL_DEFAULT (green) or DTL_ followed by a color name).
warningCol - color of a message of type warning (arguments can be DTL_DEFAULT (yellow) or DTL_ followed by a color name).
errorCol - color of a message of type error (arguments can be DTL_DEFAULT (red) or DTL_ followed by a color name).

timeFormat - how time is shown: DTL_PROGRAM_TIME for time passed from the start of the program, 
DTL_SYSTEM_TIME for the current system time (doesn't take into consideration DST) and DTL_DONT_SHOW for none.

logLocation - where the logs are shown: DTL_CONSOLE - to display logs in a console, 
DTL_FILE for saving logs in a file (must specify a filepath using filePath), 
(if logs were empty the file is not created) or DTL_DONT_SHOW for not saving the logs.

--entry/info/warning/error--
You must provide a string in which you can place tokens {X} where X is a flag, 
if between {} there is no char or more than one char the braces (and the contents between them) will be displayed normally,
but when a flag is specified instead of {X} a variable given as another argument in the function will be displayed. 
If there are no arguments {X} will be displaced, if there are more arguments than there are {X} then additional arguments will be ignored.
Supported argument types are the same as std::cout.

These functions can also be call using macros DTL_ENT, DTL_INF, DTL_WAR, DTL_ERR for entry, info, warning and error respectively.
These macros can be later overwritten after including dtl.h so they don't compile.

Flags:
0 - Default output
b - Displays number's binary representation
x - Displays a number in hexadecimal format
o - Displays a number in octal format
i - Always displays a number as an integer
s - Displays a number in scientific notation 
n - Displays elements right next to one another without a coma (works for arrays and vectors only)
c - Displays elements in a column with index number (works for arrays and vectors only)
k - Displays elements in a column without index number (works for arrays and vectors only)
